 * It'll be complicated to create objects around without having a context available, but I'm not fond
   of creating static variables, for sake of testability and reentrance. We may should store the
   context in classes.
 * Add an error hooking mecanism, test for errors too in unit tests.
 * Support code coverage.
 * Setup CI on github.
 * Add a magic number and an assert to raise early on UlgObjects pointer errors in debug.
 * Expose UlgProperty publicly : Maybe not. Actually, it may be a good idea to not even Expose
 * ulg_object_get and ulg_object_set publicly : all data modification may be done 'the native way',
   and data binding updates trigerred by calling event handlers. Only the binding system could access
   property getter / setters.
 * Don't store member_count, class_count and names_length : find them when building modules.
 * Handle OOM
 